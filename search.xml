<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ctf入门第一章</title>
    <url>/2025/03/30/ctf%E5%85%A5%E9%97%A8%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="CTF-知识体系分类整理"><a href="#CTF-知识体系分类整理" class="headerlink" title="CTF 知识体系分类整理"></a>CTF 知识体系分类整理</h2><h2 id="一、Web-安全"><a href="#一、Web-安全" class="headerlink" title="一、Web 安全"></a>一、Web 安全</h2><p>【核心漏洞类型】</p>
<ul>
<li>SQL 注入</li>
<li>XSS 跨站脚本</li>
<li>文件上传漏洞</li>
<li>文件包含漏洞</li>
<li>XXE XML 外部实体注入</li>
<li>SSRF 服务器端请求伪造</li>
<li>RCE 远程代码执行</li>
<li>代码审计技术</li>
</ul>
<h2 id="二、密码学"><a href="#二、密码学" class="headerlink" title="二、密码学"></a>二、密码学</h2><p>【主要分支】</p>
<ul>
<li>编码技术</li>
<li>现代密码学</li>
<li>古典密码学</li>
</ul>
<h2 id="三、逆向工程"><a href="#三、逆向工程" class="headerlink" title="三、逆向工程"></a>三、逆向工程</h2><p>【核心技术】</p>
<ul>
<li>可执行文件分析</li>
<li>ASM 汇编语言</li>
<li>IDA Pro 工具使用</li>
<li>壳处理技术<br>【常见场景】</li>
<li>算法破解获取 flag</li>
<li>反调试对抗</li>
<li>代码混淆处理</li>
</ul>
<h2 id="四、二进制安全"><a href="#四、二进制安全" class="headerlink" title="四、二进制安全"></a>四、二进制安全</h2><p>【核心方向】</p>
<ul>
<li>堆溢出漏洞</li>
<li>栈溢出漏洞</li>
<li>漏洞利用 exp 编写</li>
<li>安全保护机制绕过</li>
</ul>
<h2 id="五、杂项技术"><a href="#五、杂项技术" class="headerlink" title="五、杂项技术"></a>五、杂项技术</h2><p>【涵盖范围】</p>
<ul>
<li>隐写技术</li>
<li>信息收集</li>
<li>流量分析</li>
<li>压缩包处理</li>
<li>内存取证</li>
<li>其他未归类技术</li>
</ul>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML基础内容（文档结构与核心知识）</title>
    <url>/2025/03/27/htlm%E5%9F%BA%E7%A1%80%E5%86%85%E5%AE%B9-%E5%9F%BA%E7%A1%80%E7%BB%93%E6%9E%84%E3%80%81%E7%9F%A5%E8%AF%86%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="基本文档结构"><a href="#基本文档结构" class="headerlink" title="基本文档结构"></a>基本文档结构</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;HTML教程,网页基础&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;HTML文档结构与核心知识点详解&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML基础教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页面内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="核心组成部分"><a href="#核心组成部分" class="headerlink" title="核心组成部分"></a>核心组成部分</h3><ol>
<li><strong>文档声明</strong><br><code>&lt;!DOCTYPE html&gt;</code> 声明HTML5文档类型</li>
<li><strong>根元素</strong><br><code>&lt;html&gt;</code> 标签包含整个文档内容</li>
<li><strong>头部区域</strong><br><code>&lt;head&gt;</code> 包含元数据和页面标题</li>
<li><strong>主体内容</strong><br><code>&lt;body&gt;</code> 包含所有可见内容</li>
</ol>
<h2 id="元数据配置"><a href="#元数据配置" class="headerlink" title="元数据配置"></a>元数据配置</h2><h3 id="文件头和文件体"><a href="#文件头和文件体" class="headerlink" title="文件头和文件体"></a>文件头和文件体</h3><ul>
<li><code>&lt;head&gt;</code> 文件头</li>
<li><code>&lt;/head&gt;</code> 文件尾</li>
<li><code>&lt;body&gt;</code> 文件体</li>
<li>主要内容</li>
<li><code>&lt;/body&gt;</code> 结束</li>
<li><code>&lt;/html&gt;</code></li>
</ul>
<h3 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a>元数据</h3><ul>
<li><code>keyword</code>：向搜索引擎说明你的网页的关键词</li>
<li><code>description</code>：向搜索引擎描述网页内容的摘要信息</li>
</ul>
<h3 id="元数据配置-1"><a href="#元数据配置-1" class="headerlink" title="元数据配置"></a>元数据配置</h3><table>
<thead>
<tr>
<th>属性</th>
<th>作用</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td><code>charset</code></td>
<td>指定字符编码</td>
<td><code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code></td>
</tr>
<tr>
<td><code>name=&quot;keywords&quot;</code></td>
<td>搜索引擎关键词</td>
<td><code>&lt;meta name=&quot;keywords&quot; content=&quot;HTML,教程&quot;&gt;</code></td>
</tr>
<tr>
<td><code>name=&quot;description&quot;</code></td>
<td>页面描述</td>
<td><code>&lt;meta name=&quot;description&quot; content=&quot;HTML基础教程&quot;&gt;</code></td>
</tr>
<tr>
<td><code>name=&quot;viewport&quot;</code></td>
<td>移动端适配</td>
<td><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;</code></td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 典型元数据配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;网页开发,前端技术&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;HTML文档结构详解教程&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>页面标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="HTML的属性"><a href="#HTML的属性" class="headerlink" title="HTML的属性"></a>HTML的属性</h3><ul>
<li><code>lang</code>(语言)&#x3D;“zh(中文)&#x2F;en(英文)</li>
</ul>
<hr>
<h2 id="URL链接"><a href="#URL链接" class="headerlink" title="URL链接"></a>URL链接</h2><h3 id="协议和域名"><a href="#协议和域名" class="headerlink" title="协议和域名"></a>协议和域名</h3><ul>
<li><code>http</code>资源访问<ul>
<li><code>https://www.xxxx.com/</code></li>
</ul>
</li>
<li><code>FTP</code>文件下载<ul>
<li><code>ftp://ftp.xxxxx/文件夹/文件</code></li>
</ul>
</li>
<li><code>MAILTO</code>邮箱地址<ul>
<li><code>mailto:xxxxxx@xx.com</code></li>
</ul>
</li>
</ul>
<hr>
<h2 id="文件路径"><a href="#文件路径" class="headerlink" title="文件路径"></a>文件路径</h2><h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><ul>
<li>相对当前文件寻找需要的文件的路径</li>
<li><code>&quot;..&quot;</code>：返回上一层寻找文件</li>
</ul>
<h3 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h3><ul>
<li>从根目录下寻找需要的文件</li>
<li><code>&lt;主机+服务器+目录+文件名&gt;</code></li>
</ul>
<hr>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul>
<li>使用注释对一段html代码进行说明，方便在未来清楚的明白代码意图</li>
</ul>
<h2 id="图像格式"><a href="#图像格式" class="headerlink" title="图像格式"></a>图像格式</h2><ul>
<li><code>jpeg(JPG)</code>：网页上更加实用，有损压缩，色彩丰富，较小</li>
<li><code>PNG</code>：无损压缩（同时支持有损，透明，交错，动画）</li>
<li><code>GIF</code>：简单动画，背景图片</li>
</ul>
<h3 id="img的使用"><a href="#img的使用" class="headerlink" title="img的使用"></a>img的使用</h3><ul>
<li><code>&lt;img src=&quot;相对路径/绝对路径&quot; alt=&quot;图片名称&quot;(当图片无法正常显示时显示该文本)/&gt;</code></li>
</ul>
<h2 id="超链接的使用"><a href="#超链接的使用" class="headerlink" title="超链接的使用"></a>超链接的使用</h2><ul>
<li><code>&lt;a href=&quot;链接((URL)/文件路径&quot;&gt;入口名称/图片等&lt;/a&gt;</code></li>
</ul>
<h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><ul>
<li><code>target</code>：当值等于_blank时会在一个新窗口中打开</li>
<li><code>title</code>：提示性文本，当鼠标放在入口时会显示该段提示</li>
</ul>
<h2 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><ul>
<li>跳跃到对应位置</li>
</ul>
<h3 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h3><h4 id="局部属性"><a href="#局部属性" class="headerlink" title="局部属性"></a>局部属性</h4><ul>
<li><code>download=&#39;&#39;</code> 属性 用于a标签中(a标签必须有 href )</li>
</ul>
<h4 id="全局属性"><a href="#全局属性" class="headerlink" title="全局属性"></a>全局属性</h4><ul>
<li><code>spellcheck=&#39;true/false&#39;</code> 对可编辑元素(非密码)进行检查</li>
<li><code>contenteditable=&#39;true/false&#39;</code> 使元素内容可编辑(p&#x2F;div&#x2F;…)<ul>
<li><code>contenteditable=&quot;plaintext-only&quot;</code> 只能输入纯文本</li>
</ul>
</li>
<li><code>accesskey=&quot;key&quot;</code> 使元素获取焦点的快捷键(Alt+key&#x2F;Alt+shift+key)</li>
<li><code>center</code> 标签自带居中样式。</li>
</ul>
<h3 id="文档声明"><a href="#文档声明" class="headerlink" title="文档声明"></a>文档声明</h3><ul>
<li><code>DOCTYPE</code> 声明文档html格式</li>
<li><code>meta</code></li>
</ul>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><ul>
<li><code>background-attachment: fixed;</code></li>
</ul>
<h3 id="显示省略号"><a href="#显示省略号" class="headerlink" title="显示省略号"></a>显示省略号</h3><ul>
<li><code>white-space: normal/nowrap</code>(文本不会换行)</li>
</ul>
<h2 id="二级菜单"><a href="#二级菜单" class="headerlink" title="二级菜单"></a>二级菜单</h2><ul>
<li><code>&lt;ul&gt;</code><ul>
<li><code>&lt;li&gt;</code><ul>
<li><code>&lt;ul&gt;</code> 默认为none ,当鼠标移动到父级元素上时 ul改为block( li:hover)<ul>
<li><code>&lt;li&gt;</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="通栏和版心"><a href="#通栏和版心" class="headerlink" title="通栏和版心"></a>通栏和版心</h2><ul>
<li>通栏:占全屏的元素</li>
<li>版心:两边会留空间的元素</li>
</ul>
<h3 id="设定一个类名作为版心"><a href="#设定一个类名作为版心" class="headerlink" title="设定一个类名作为版心"></a>设定一个类名作为版心</h3><ul>
<li><code>outline</code> : 设置input元素默认互动(焦点)样式</li>
</ul>
<h2 id="布局区域标签-语义化"><a href="#布局区域标签-语义化" class="headerlink" title="布局区域标签(语义化)"></a>布局区域标签(语义化)</h2><ul>
<li>这些语义化标准主要是针对搜索引擎的</li>
<li>IE9中需要转换成块元素</li>
<li>移动端没有这些兼容性问题</li>
</ul>
<h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><ul>
<li><code>&lt;header&gt;</code> 头部标签</li>
<li><code>&lt;nav&gt;</code> 导航栏</li>
<li><code>&lt;article&gt;</code> 标签规定独立的自包含内容(帖子，文章，评论)</li>
<li><code>&lt;section&gt;</code> 定义某个区域(大号的div)</li>
<li><code>&lt;aside&gt;</code> 侧边栏</li>
<li><code>&lt;footer&gt;</code> 尾部标签</li>
<li><code>&lt;figure&gt;</code> 标签规定独立的流内容（图像、图表、代码等等）<ul>
<li><code>&lt;figcaption&gt;</code> 在figure 标签中设置标题</li>
</ul>
</li>
<li><code>&lt;label&gt;</code> 可以关联</li>
</ul>
<h2 id="多媒体标签"><a href="#多媒体标签" class="headerlink" title="多媒体标签"></a>多媒体标签</h2><h3 id="视频播放"><a href="#视频播放" class="headerlink" title="视频播放"></a>视频播放</h3><ul>
<li><code>&lt;video src=&#39;文件地址&#39;&gt;</code> 视频播放,只支持 MP4,WetbM,Ogg</li>
<li>标签内容可以写 ‘您的浏览器不支持 video 标签’ ,当未正常播放的时候会显示。</li>
</ul>
<h3 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h3><ul>
<li><code>autoplay = &#39;autoplay&#39;</code> 视频自动播放(谷歌浏览器需要muted属性)</li>
<li><code>controls = &quot;controls&quot;</code> 显示播放控件(播放暂停进度条等..)</li>
<li><code>height/width</code> 设置播放器高宽</li>
<li><code>loop = &#39;loop&#39;</code> 是否循环播放</li>
<li><code>preload = auto/none</code> 是否预加载视频</li>
<li><code>poster = imgurl(图片地址)</code> 加载等待的图片</li>
<li><code>muted = muted</code> 静音播放</li>
</ul>
<h3 id="音频播放"><a href="#音频播放" class="headerlink" title="音频播放"></a>音频播放</h3><ul>
<li><code>&lt;audio src=&#39;&#39;&gt;</code> 音频播放， 支持 MP3、Wav、Ogg 格式</li>
<li><code>autoplay = &#39;autoplay&#39;</code> 视频自动播放（谷歌禁用此属性）</li>
<li><code>controls = &quot;controls&quot;</code> 显示播放控件(播放暂停进度条等..)</li>
<li><code>loop = &#39;loop&#39;</code> 是否循环播放</li>
<li><code>src = URL(文件路径)</code></li>
</ul>
<h3 id="引入源文件"><a href="#引入源文件" class="headerlink" title="引入源文件"></a>引入源文件</h3><ul>
<li><code>&lt;source src=&#39;&#39; type=&#39;video/mp4[ogg/..]&#39;&gt;</code> 在video&#x2F;audio标签中，常用于引入源文件</li>
</ul>
<h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><h3 id="选项列表-数据列表"><a href="#选项列表-数据列表" class="headerlink" title="选项列表(数据列表)"></a>选项列表(数据列表)</h3><ul>
<li>在文本框中输入数据，会弹出 datalist 中相关文本</li>
<li><code>&lt;input type=&#39;text&#39; list=&#39;mylist&#39;&gt;</code></li>
<li><code>&lt;datalist id=&#39;mylist&#39;&gt;</code><ul>
<li><code>&lt;option value=&#39;&#39;&gt;选项</code></li>
</ul>
</li>
</ul>
<h3 id="新增-input-类型"><a href="#新增-input-类型" class="headerlink" title="新增 input 类型"></a>新增 input 类型</h3><ul>
<li><code>pattern</code> : 设为某个格式的正则表达式，提交时会检查内容是否符合。</li>
</ul>
<h3 id="type属性值"><a href="#type属性值" class="headerlink" title="type属性值"></a>type属性值</h3><ul>
<li><code>email</code> 限制用户只能输入Email 类型  multiple 属性可以填写多个邮箱用 ‘,’ 隔开</li>
<li><code>url</code> 限制用户只能输入 URL 类型</li>
<li><code>date</code> 限制用户只能输入 日期 类型</li>
<li><code>time</code> 限制用户只能输入 时间 类型</li>
<li><code>month</code> 限制用户只能输入 月分 类型</li>
<li><code>week</code> 限制用户只能输入 周 类型</li>
<li><code>number</code> 限制用户只能输入 数字 类型</li>
<li><code>tel</code> 手机号码</li>
<li><code>search</code> 搜索框</li>
<li><code>color</code> 生成颜色选择器</li>
</ul>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li>验证内容是否符合通过添加 form 表单域后 点击按钮 验证</li>
</ul>
<h3 id="表单验证属性"><a href="#表单验证属性" class="headerlink" title="表单验证属性"></a>表单验证属性</h3><table>
<thead>
<tr>
<th>属性</th>
<th>作用</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td><code>required</code></td>
<td>必填字段</td>
<td><code>&lt;input required&gt;</code></td>
</tr>
<tr>
<td><code>pattern</code></td>
<td>正则验证</td>
<td><code>&lt;input pattern=&quot;\d+&quot;&gt;</code></td>
</tr>
<tr>
<td><code>placeholder</code></td>
<td>输入提示</td>
<td><code>&lt;input placeholder=&quot;请输入&quot;&gt;</code></td>
</tr>
<tr>
<td><code>min/max</code></td>
<td>数值范围</td>
<td><code>&lt;input type=&quot;number&quot; min=&quot;1&quot;&gt;</code></td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 带验证的登录表单示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">placeholder</span>=<span class="string">&quot;请输入邮箱&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">required</span></span></span><br><span class="line"><span class="tag">           <span class="attr">pattern</span>=<span class="string">&quot;[a-z0-9._%+-]+@[a-z0-9.-]+\.com&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">minlength</span>=<span class="string">&quot;6&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="autofocus"><a href="#autofocus" class="headerlink" title="autofocus"></a>autofocus</h3><ul>
<li><code>autofocus = &#39;autofocus&#39;</code> 自动聚焦属性</li>
</ul>
<h3 id="autocomplete"><a href="#autocomplete" class="headerlink" title="autocomplete"></a>autocomplete</h3><ul>
<li><code>autocomplete = &#39;off&#39;/on</code> 当用户字段开始键入时，浏览器基于之前输入过的值，显示出在字段中填写的选项。需要放入表单且同时加上 name 属性。</li>
</ul>
<h3 id="multiple"><a href="#multiple" class="headerlink" title="multiple"></a>multiple</h3><ul>
<li><code>multiple = &#39;multiple&#39;</code> 可以多选文件提交 (type &#x3D; ‘file’)</li>
</ul>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><h3 id="定义表格"><a href="#定义表格" class="headerlink" title="定义表格"></a>定义表格</h3><ul>
<li><code>&lt;table&gt;</code>:定义表格</li>
<li><code>&lt;tr&gt;</code>:table标签的子标签，代表一列、</li>
<li><code>&lt;td&gt;</code>:tr标签的子标签，代表一个单元格</li>
</ul>
<h3 id="table属性"><a href="#table属性" class="headerlink" title="table属性"></a>table属性</h3><ul>
<li><code>border</code>:边框粗细程度（属性值为数值）</li>
<li><code>cellspacing</code>:定义单元格的间距（属性值为数值）</li>
</ul>
<h3 id="td属性"><a href="#td属性" class="headerlink" title="td属性"></a>td属性</h3><ul>
<li><code>colspan</code>:定义单元格的跨列大小（属性值为数值）</li>
<li><code>rowspan</code>:定义单元格的跨行大小（属性值为数值）</li>
</ul>
<h3 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h3><ul>
<li><code>align</code>:属性值center，使文字或表格居中</li>
</ul>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>关于博客</title>
    <url>/2025/03/27/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>##hexo文件构造<br>在博客的根目录下以下文件夹，以及他们对应的作用：<br>public ：这个是博客装换成静态页面所存储的文件夹<br>source : 这个是博客的数据存放位置，存放着文章，页面信息等内容</p>
]]></content>
  </entry>
  <entry>
    <title>前端JS：关于DOM元素</title>
    <url>/2025/03/27/%E5%89%8D%E7%AB%AFJS%EF%BC%9A%E5%85%B3%E4%BA%8EDOM%E5%85%83%E7%B4%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><h3 id="元素-Element-vs-节点-Node"><a href="#元素-Element-vs-节点-Node" class="headerlink" title="元素(Element) vs 节点(Node)"></a>元素(Element) vs 节点(Node)</h3><ul>
<li>元素：HTML文档中的具体标签（如 <code>&lt;div&gt;</code> <code>&lt;button&gt;</code>）</li>
<li>节点：文档中的所有组成部分（包括元素、文本、注释等）</li>
<li>关系：元素是节点的一种特殊类型</li>
</ul>
<h3 id="常用DOM操作"><a href="#常用DOM操作" class="headerlink" title="常用DOM操作"></a>常用DOM操作</h3><ol>
<li><strong>禁用元素</strong>：<code>element.disabled = true</code> 适用于表单元素</li>
<li><strong>内容操作</strong>：<code>innerHTML</code> &#x2F; <code>textContent</code></li>
<li><strong>样式控制</strong>：<code>style.property</code> &#x2F; <code>classList</code></li>
<li><strong>事件处理</strong>：<code>addEventListener</code></li>
</ol>
<h2 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h2><h3 id="案例1：动态表格生成"><a href="#案例1：动态表格生成" class="headerlink" title="案例1：动态表格生成"></a>案例1：动态表格生成</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 创建表格骨架</span></span><br><span class="line"><span class="keyword">const</span> table = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;table&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 批量生成数据行</span></span><br><span class="line">users.<span class="title function_">forEach</span>(<span class="function"><span class="params">user</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> row = table.<span class="title function_">insertRow</span>();</span><br><span class="line">  row.<span class="property">innerHTML</span> = <span class="string">`&lt;td&gt;<span class="subst">$&#123;user.name&#125;</span>&lt;/td&gt;&lt;td&gt;<span class="subst">$&#123;user.age&#125;</span>&lt;/td&gt;`</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 添加到页面</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(table);</span><br></pre></td></tr></table></figure>

<h3 id="案例2：颜色切换器"><a href="#案例2：颜色切换器" class="headerlink" title="案例2：颜色切换器"></a>案例2：颜色切换器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;color-picker&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">data-color</span>=<span class="string">&quot;#ff0000&quot;</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">data-color</span>=<span class="string">&quot;#00ff00&quot;</span>&gt;</span>绿色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;button&#x27;</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">btn</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">backgroundColor</span> = btn.<span class="property">dataset</span>.<span class="property">color</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol>
<li><strong>元素找不到</strong>：检查选择器拼写&#x2F;元素加载时机</li>
<li><strong>事件不触发</strong>：确认元素已渲染后再绑定事件</li>
<li><strong>样式不生效</strong>：优先使用class操作代替直接style修改</li>
</ol>
<h2 id="进阶练习"><a href="#进阶练习" class="headerlink" title="进阶练习"></a>进阶练习</h2><table>
<thead>
<tr>
<th>练习项目</th>
<th>关键技能</th>
<th>实现思路</th>
</tr>
</thead>
<tbody><tr>
<td>留言板</td>
<td>节点创建&#x2F;事件委托</td>
<td>1. 获取输入 2. 创建元素 3. 添加删除功能</td>
</tr>
<tr>
<td>全选功能</td>
<td>属性批量操作</td>
<td>1. 获取所有复选框 2. 联动全选状态</td>
</tr>
<tr>
<td>分类筛选</td>
<td>数据过滤&#x2F;显示控制</td>
<td>1. 数据分类 2. 显示切换动画</td>
</tr>
</tbody></table>
<p>流程图示例（全选功能）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">    A[点击全选按钮] --&gt; B&#123;全选状态&#125;</span><br><span class="line">    B --&gt;|true| C[设置所有checkbox.checked=true]</span><br><span class="line">    B --&gt;|false| D[设置所有checkbox.checked=false]</span><br></pre></td></tr></table></figure>
<p>对象.disabled &#x3D; true 禁用按钮&#x2F;搜索框</p>
<h2 id="循环方法对比"><a href="#循环方法对比" class="headerlink" title="循环方法对比"></a>循环方法对比</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// forEach写法</span></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">arr.<span class="title function_">forEach</span>(alert);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传统for循环写法</span></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">0</span>, length = arr.<span class="property">length</span>; k &lt; length; k++) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(arr[k]); <span class="comment">// 注意变量名一致性</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ForEach参数解析"><a href="#ForEach参数解析" class="headerlink" title="ForEach参数解析"></a>ForEach参数解析</h3><table>
<thead>
<tr>
<th>参数位置</th>
<th>说明</th>
<th>类型</th>
</tr>
</thead>
<tbody><tr>
<td>第1个参数</td>
<td>当前遍历的数组元素</td>
<td>any</td>
</tr>
<tr>
<td>第2个参数</td>
<td>当前元素的索引（从0开始）</td>
<td>number</td>
</tr>
<tr>
<td>第3个参数</td>
<td>正在遍历的数组本身</td>
<td>Array</td>
</tr>
</tbody></table>
<h3 id="运行示例"><a href="#运行示例" class="headerlink" title="运行示例"></a>运行示例</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> letters = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>];</span><br><span class="line">letters.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index, array</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(item, index, array);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 输出结果：</span></span><br><span class="line"><span class="comment">a 0 [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;]</span></span><br><span class="line"><span class="comment">b 1 [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;]</span></span><br><span class="line"><span class="comment">c 2 [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;]</span></span><br><span class="line"><span class="comment">d 3 [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">d <span class="number">3</span> [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## <span class="variable constant_">DOM</span> 文档模型</span><br><span class="line"></span><br><span class="line">### 核心概念</span><br><span class="line">- **文档(<span class="title class_">Document</span>)**：整个页面的根节点，通过 <span class="string">`document`</span> 对象访问</span><br><span class="line">- **元素(<span class="title class_">Element</span>)**：<span class="variable constant_">HTML</span> 标签对应的对象（如 <span class="string">`&lt;div&gt;`</span>、<span class="string">`&lt;p&gt;`</span>）</span><br><span class="line">- **节点(<span class="title class_">Node</span>)**：文档中的所有组成部分（包括元素、文本、注释等）</span><br><span class="line"></span><br><span class="line">### 元素获取方法</span><br><span class="line"></span><br><span class="line">| 方法名                  | 返回类型       | 使用场景               |</span><br><span class="line">|-------------------------|----------------|------------------------|</span><br><span class="line">| <span class="string">`getElementById()`</span>      | 单个元素对象   | 精确查找唯一元素       |</span><br><span class="line">| <span class="string">`getElementsByTagName()`</span> | <span class="variable constant_">HTML</span>集合       | 批量操作同类型元素     |</span><br><span class="line"></span><br><span class="line"><span class="string">``</span><span class="string">`javascript</span></span><br><span class="line"><span class="string">// 通过ID获取单个元素</span></span><br><span class="line"><span class="string">const header = document.getElementById(&#x27;mainHeader&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 通过标签名获取所有段落</span></span><br><span class="line"><span class="string">const paragraphs = document.getElementsByTagName(&#x27;p&#x27;);</span></span><br></pre></td></tr></table></figure>

<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol>
<li><strong>加载顺序</strong>：脚本应放在<body>底部或使用DOMContentLoaded事件</body></li>
<li><strong>方法规范</strong>：注意方法名大小写（如<code>getElementById</code>的最后一个’d’小写）</li>
<li><strong>返回类型</strong>：<ul>
<li><code>null</code> 表示元素未找到</li>
<li>集合需通过索引访问具体元素（如<code>paragraphs[0]</code>）</li>
</ul>
</li>
</ol>
<h3 id="调试技巧"><a href="#调试技巧" class="headerlink" title="调试技巧"></a>调试技巧</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 查看元素详细信息</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">dir</span>(header);</span><br><span class="line"><span class="comment">/* 输出示例：</span></span><br><span class="line"><span class="comment">HTMLHeadingElement &#123;</span></span><br><span class="line"><span class="comment">  id: &#x27;mainHeader&#x27;,</span></span><br><span class="line"><span class="comment">  classList: DOMTokenList [ ],</span></span><br><span class="line"><span class="comment">  ...</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br></pre></td></tr></table></figure>
<p>document.getElementsbyTageName(div[1])返回第二个元素值</p>
<p>获取父元素中的子元素：<br>1-可以给父元素定ID，在父元素中查找元素( </p>
<ul id="a">   
var ul=document.getElementByid('a');
console.log( ul.getElementsByTageName('li'))

<p>var ul&#x3D;document.getElementsByTagName(‘ul’)<br>console.log(ul[0].getElementsByTagName(‘li’))</p>
<p>)</p>
<p>通过类名获取元素（HTML5）<br> document.getElmentsByClassName(‘box’); </p>
<p>指定选择器的第一个元素对象（选择器需要加符号申明）<br>document.querySelector(‘.box’)&#x2F;&#x2F;获取第一个类选择器,也可获取第一个标签选择器<br>所有元素对象<br>document.querySelectorAll(‘.box’)&#x2F;&#x2F;获取第所有类选择器</p>
<p>获取body元素<br>document.body;</p>
<p>获取html元素<br>document.documentElement;</p>
</ul>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>碎碎念</title>
    <url>/2025/03/28/%E7%A2%8E%E7%A2%8E%E5%BF%B5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="https://bu.dusays.com/2025/03/29/67e7f9567accd.jpg"><br>啊大大</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
</search>
